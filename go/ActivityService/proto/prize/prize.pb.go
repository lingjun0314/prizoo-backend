// protoc --proto_path=. --micro_out=. --go_out=:. prize.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: prize.proto

package prize

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPrizeByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPrizeByIdRequest) Reset() {
	*x = GetPrizeByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrizeByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrizeByIdRequest) ProtoMessage() {}

func (x *GetPrizeByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrizeByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPrizeByIdRequest) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{0}
}

func (x *GetPrizeByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPrizeByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImagePath                   string   `protobuf:"bytes,2,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	AdditionalPrizeName         string   `protobuf:"bytes,3,opt,name=additionalPrizeName,proto3" json:"additionalPrizeName,omitempty"`
	AdditionalPrizeTicketAmount int32    `protobuf:"varint,4,opt,name=additionalPrizeTicketAmount,proto3" json:"additionalPrizeTicketAmount,omitempty"`
	AdditionalPrizeImagePath    string   `protobuf:"bytes,5,opt,name=additionalPrizeImagePath,proto3" json:"additionalPrizeImagePath,omitempty"`
	TicketList                  []string `protobuf:"bytes,6,rep,name=ticketList,proto3" json:"ticketList,omitempty"`
}

func (x *GetPrizeByIdResponse) Reset() {
	*x = GetPrizeByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrizeByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrizeByIdResponse) ProtoMessage() {}

func (x *GetPrizeByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrizeByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPrizeByIdResponse) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{1}
}

func (x *GetPrizeByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPrizeByIdResponse) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *GetPrizeByIdResponse) GetAdditionalPrizeName() string {
	if x != nil {
		return x.AdditionalPrizeName
	}
	return ""
}

func (x *GetPrizeByIdResponse) GetAdditionalPrizeTicketAmount() int32 {
	if x != nil {
		return x.AdditionalPrizeTicketAmount
	}
	return 0
}

func (x *GetPrizeByIdResponse) GetAdditionalPrizeImagePath() string {
	if x != nil {
		return x.AdditionalPrizeImagePath
	}
	return ""
}

func (x *GetPrizeByIdResponse) GetTicketList() []string {
	if x != nil {
		return x.TicketList
	}
	return nil
}

type CreatePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImagePath                   string `protobuf:"bytes,2,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	AdditionalPrizeName         string `protobuf:"bytes,3,opt,name=additionalPrizeName,proto3" json:"additionalPrizeName,omitempty"`
	AdditionalPrizeTicketAmount int32  `protobuf:"varint,4,opt,name=additionalPrizeTicketAmount,proto3" json:"additionalPrizeTicketAmount,omitempty"`
	AdditionalPrizeImagePath    string `protobuf:"bytes,5,opt,name=additionalPrizeImagePath,proto3" json:"additionalPrizeImagePath,omitempty"`
	Version                     int32  `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreatePrizeRequest) Reset() {
	*x = CreatePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrizeRequest) ProtoMessage() {}

func (x *CreatePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrizeRequest.ProtoReflect.Descriptor instead.
func (*CreatePrizeRequest) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePrizeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePrizeRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *CreatePrizeRequest) GetAdditionalPrizeName() string {
	if x != nil {
		return x.AdditionalPrizeName
	}
	return ""
}

func (x *CreatePrizeRequest) GetAdditionalPrizeTicketAmount() int32 {
	if x != nil {
		return x.AdditionalPrizeTicketAmount
	}
	return 0
}

func (x *CreatePrizeRequest) GetAdditionalPrizeImagePath() string {
	if x != nil {
		return x.AdditionalPrizeImagePath
	}
	return ""
}

func (x *CreatePrizeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CreatePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreatePrizeResponse) Reset() {
	*x = CreatePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrizeResponse) ProtoMessage() {}

func (x *CreatePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrizeResponse.ProtoReflect.Descriptor instead.
func (*CreatePrizeResponse) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePrizeResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreatePrizeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdatePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImagePath                   string `protobuf:"bytes,2,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	AdditionalPrizeName         string `protobuf:"bytes,3,opt,name=additionalPrizeName,proto3" json:"additionalPrizeName,omitempty"`
	AdditionalPrizeTicketAmount int32  `protobuf:"varint,4,opt,name=additionalPrizeTicketAmount,proto3" json:"additionalPrizeTicketAmount,omitempty"`
	AdditionalPrizeImagePath    string `protobuf:"bytes,5,opt,name=additionalPrizeImagePath,proto3" json:"additionalPrizeImagePath,omitempty"`
	DocumentPath                string `protobuf:"bytes,6,opt,name=documentPath,proto3" json:"documentPath,omitempty"`
}

func (x *UpdatePrizeRequest) Reset() {
	*x = UpdatePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrizeRequest) ProtoMessage() {}

func (x *UpdatePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrizeRequest.ProtoReflect.Descriptor instead.
func (*UpdatePrizeRequest) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePrizeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePrizeRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *UpdatePrizeRequest) GetAdditionalPrizeName() string {
	if x != nil {
		return x.AdditionalPrizeName
	}
	return ""
}

func (x *UpdatePrizeRequest) GetAdditionalPrizeTicketAmount() int32 {
	if x != nil {
		return x.AdditionalPrizeTicketAmount
	}
	return 0
}

func (x *UpdatePrizeRequest) GetAdditionalPrizeImagePath() string {
	if x != nil {
		return x.AdditionalPrizeImagePath
	}
	return ""
}

func (x *UpdatePrizeRequest) GetDocumentPath() string {
	if x != nil {
		return x.DocumentPath
	}
	return ""
}

type UpdatePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	StatusCode int32  `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *UpdatePrizeResponse) Reset() {
	*x = UpdatePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prize_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrizeResponse) ProtoMessage() {}

func (x *UpdatePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prize_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrizeResponse.ProtoReflect.Descriptor instead.
func (*UpdatePrizeResponse) Descriptor() ([]byte, []int) {
	return file_prize_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePrizeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePrizeResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_prize_proto protoreflect.FileDescriptor

var file_prize_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x30, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x90, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x13,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x4f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x32, 0xbe, 0x01, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prize_proto_rawDescOnce sync.Once
	file_prize_proto_rawDescData = file_prize_proto_rawDesc
)

func file_prize_proto_rawDescGZIP() []byte {
	file_prize_proto_rawDescOnce.Do(func() {
		file_prize_proto_rawDescData = protoimpl.X.CompressGZIP(file_prize_proto_rawDescData)
	})
	return file_prize_proto_rawDescData
}

var file_prize_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_prize_proto_goTypes = []any{
	(*GetPrizeByIdRequest)(nil),  // 0: GetPrizeByIdRequest
	(*GetPrizeByIdResponse)(nil), // 1: GetPrizeByIdResponse
	(*CreatePrizeRequest)(nil),   // 2: CreatePrizeRequest
	(*CreatePrizeResponse)(nil),  // 3: CreatePrizeResponse
	(*UpdatePrizeRequest)(nil),   // 4: UpdatePrizeRequest
	(*UpdatePrizeResponse)(nil),  // 5: UpdatePrizeResponse
}
var file_prize_proto_depIdxs = []int32{
	0, // 0: prize.GetPrizeById:input_type -> GetPrizeByIdRequest
	2, // 1: prize.CreatePrize:input_type -> CreatePrizeRequest
	4, // 2: prize.UpdatePrize:input_type -> UpdatePrizeRequest
	1, // 3: prize.GetPrizeById:output_type -> GetPrizeByIdResponse
	3, // 4: prize.CreatePrize:output_type -> CreatePrizeResponse
	5, // 5: prize.UpdatePrize:output_type -> UpdatePrizeResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_prize_proto_init() }
func file_prize_proto_init() {
	if File_prize_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prize_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrizeByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prize_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrizeByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prize_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prize_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prize_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prize_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prize_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prize_proto_goTypes,
		DependencyIndexes: file_prize_proto_depIdxs,
		MessageInfos:      file_prize_proto_msgTypes,
	}.Build()
	File_prize_proto = out.File
	file_prize_proto_rawDesc = nil
	file_prize_proto_goTypes = nil
	file_prize_proto_depIdxs = nil
}
